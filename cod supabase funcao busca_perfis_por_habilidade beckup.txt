
BEGIN
    RETURN QUERY
    SELECT
        p.id,
        p.apelido,
        pp.titulo_profissional,
        p.foto_perfil_url,
        pp.habilidades,
        COALESCE(avg_avaliacoes.avaliacao_media, 0) AS avaliacao_media,
        COALESCE(avg_avaliacoes.total_avaliacoes, 0) AS total_avaliacoes
    FROM
        public.perfis p
    INNER JOIN
        public.perfis_profissionais pp ON p.id = pp.id
    LEFT JOIN LATERAL (
        SELECT
            os.trabalhador_id,
            COUNT(os.id) AS total_avaliacoes,
            AVG((
                (os.avaliacao_estrelas->>
'atencao_cliente')::integer +
                (os.avaliacao_estrelas->>
'atencao_detalhes')::integer +
                (os.avaliacao_estrelas->>
'comunicacao')::integer +
                (os.avaliacao_estrelas->>
'organizacao')::integer +
                (os.avaliacao_estrelas->>
'pontualidade')::integer +
                (os.avaliacao_estrelas->>
'proatividade')::integer +
                (os.avaliacao_estrelas->>
'velocidade_execucao')::integer
            ) / 7.0) AS avaliacao_media
        FROM
            ordens_de_servico os
        WHERE
            os.trabalhador_id = p.id 
            AND os.status = 'concluida' 
            AND os.avaliado_pelo_contratante = true 
            AND os.avaliacao_estrelas IS NOT NULL
        GROUP BY
            os.trabalhador_id
    ) AS avg_avaliacoes ON true
    WHERE
        LOWER(pp.habilidades::text) LIKE LOWER(CONCAT('%', habilidade_texto, '%'))
        AND (
            (cidade_texto IS NULL OR LOWER(p.cidade) LIKE LOWER(CONCAT('%', cidade_texto, '%'))) AND
            (estado_texto IS NULL OR LOWER(p.estado) LIKE LOWER(CONCAT('%', estado_texto, '%'))) AND
            (bairro_texto IS NULL OR LOWER(p.bairro) LIKE LOWER(CONCAT('%', bairro_texto, '%')))
        )
        AND p.ativo = true;
END;
